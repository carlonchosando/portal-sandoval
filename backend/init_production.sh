#!/bin/bash

# Script de inicializaci√≥n para producci√≥n
# Este script se ejecuta autom√°ticamente cuando se inicia el contenedor Docker

echo "üöÄ Iniciando configuraci√≥n de producci√≥n..."

# Esperar a que la base de datos est√© disponible
echo "‚è≥ Esperando conexi√≥n a la base de datos..."
python3 manage.py migrate --check
while [ $? -ne 0 ]; do
    echo "Base de datos no disponible, esperando..."
    sleep 2
    python3 manage.py migrate --check
done

echo "‚úÖ Base de datos disponible"

# Ejecutar migraciones
echo "üì¶ Aplicando migraciones..."
python3 manage.py migrate

# Inicializar configuraci√≥n de la aplicaci√≥n
echo "‚öôÔ∏è Inicializando configuraci√≥n de la aplicaci√≥n..."
python3 manage.py init_app_config

# Recopilar archivos est√°ticos
echo "üìÅ Recopilando archivos est√°ticos..."
python3 manage.py collectstatic --noinput

# Crear superusuario si no existe (solo en desarrollo)
if [ "$DJANGO_SUPERUSER_USERNAME" ] && [ "$DJANGO_SUPERUSER_PASSWORD" ] && [ "$DJANGO_SUPERUSER_EMAIL" ]; then
    echo "üë§ Creando superusuario..."
    python3 manage.py shell -c "
from django.contrib.auth.models import User
if not User.objects.filter(username='$DJANGO_SUPERUSER_USERNAME').exists():
    User.objects.create_superuser('$DJANGO_SUPERUSER_USERNAME', '$DJANGO_SUPERUSER_EMAIL', '$DJANGO_SUPERUSER_PASSWORD')
    print('Superusuario creado exitosamente')
else:
    print('Superusuario ya existe')
"
fi

echo "üéâ Configuraci√≥n de producci√≥n completada"

# Iniciar el servidor
echo "üåê Iniciando servidor Django..."
exec "$@"

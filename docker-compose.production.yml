# Docker Compose para PRODUCCIÓN - Portal Sandoval
# Este archivo está optimizado para despliegue en Portainer
version: '3.8'

services:
  # Servicio del Backend (API con Django)
  backend:
    build: ./backend
    container_name: portal_sandoval_backend_prod
    command: sh -c "chmod +x /app/entrypoint.production.sh && /app/entrypoint.production.sh"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-*}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      # Variables para el superusuario de Django
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@portalsandoval.com}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD:-admin123}
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - portal_network

  # Servicio de la Base de Datos (PostgreSQL)
  db:
    image: postgres:15-alpine
    container_name: portal_sandoval_db_prod
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped
    networks:
      - portal_network

  # Servicio del Frontend (React)
  frontend:
    build: ./frontend
    container_name: portal_sandoval_frontend_prod
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-http://localhost:8000}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - portal_network

  # Servicio Nginx (Proxy Reverso) - OPCIONAL
  nginx:
    image: nginx:alpine
    container_name: portal_sandoval_nginx_prod
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - portal_network
    # Comentar este servicio si no necesitas nginx inicialmente

# Redes
networks:
  portal_network:
    driver: bridge

# Volúmenes para persistencia de datos
volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

version: '3.8'

# Portal Sandoval - SIMPLE y FUNCIONAL
# Solo pegar en OMV/Portainer, agregar secretos y dar UP

# Forzar descarga de imágenes actualizadas
x-pull-policy: &pull-policy
  pull_policy: always

services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    pull_policy: always
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - portal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend - Django
  backend:
    image: carlonchosando/portal-sandoval-backend:latest
    pull_policy: always
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8032}:8000"
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGINS=https://petruspub-sando.duckdns.org,https://www.petruspub-sando.duckdns.org
      - CORS_ALLOW_CREDENTIALS=True
      - CORS_ALLOW_ALL_ORIGINS=True
      - CORS_ALLOW_METHODS=GET,POST,PUT,PATCH,DELETE,OPTIONS
      - CORS_ALLOW_HEADERS=*
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      # Configuración para archivos estáticos
      - STATIC_ROOT=/app/staticfiles
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    networks:
      - portal_network

  # Frontend - React
  frontend:
    image: carlonchosando/portal-sandoval-frontend:latest
    pull_policy: always
    restart: always
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=https://petruspub-sando.duckdns.org
      - NODE_ENV=production
    ports:
      - ${FRONTEND_PORT:-3021}:3000
    networks:
      - portal_network
    command: ["sh", "-c", "npx serve -s /app/build -l 3000"]

networks:
  portal_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  static_data:
    driver: local
  media_data:
    driver: local
